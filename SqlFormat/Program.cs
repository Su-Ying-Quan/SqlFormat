using SqlFormat.Helper;

string text = "您可以使用非同步功能來存取檔案。使用非同步功能，您就可以呼叫非同步方法，而不需要使用回呼或將您的程式碼分散到多種方法或 Lambda 運算式上。若要讓同步程式碼變成非同步，只要呼叫非同步方法 (而不是同步方法)，然後將幾個關鍵字新增至程式碼即可。您可能會基於下列原因將非同步功能新增至檔案存取呼叫：非同步功能可讓 UI 應用程式回應速度更快，因為啟動作業的 UI 執行緒可以執行其他工作。如果 UI 執行緒必須執行相當耗時的程式碼 (例如超過 50 毫秒)，UI 可能會凍結到 I/O 完成，之後 UI 執行緒就可以再次處理鍵盤和滑鼠輸入以及其他事件。非同步功能藉由降低對執行緒的需求，來改善 ASP.NET 及其他伺服器架構應用程式的延展性。如果應用程式針對每個回應使用專用執行緒，並同時處理一千個要求，則需要一千個執行緒。非同步作業在等候期間通常不需要使用執行緒。 它們可能會在結束時短暫使用現有的 I/O 完成執行緒。檔案存取作業的延遲在目前情況下可能很低，但未來可能會大幅增加。例如，檔案可能會移至世界各地的伺服器。使用非同步功能所增加的額外負荷很小。您可以輕鬆地同時執行多個非同步工作。";

await FileHelper.FileWriteAsync("test.txt", text);
await FileHelper.FileReadAsync("test.txt");